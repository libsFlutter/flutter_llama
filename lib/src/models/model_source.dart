/// –ò—Å—Ç–æ—á–Ω–∏–∫ –º–æ–¥–µ–ª–∏
enum ModelSource {
  /// HuggingFace Hub
  huggingFace,
  
  /// Ollama (–ª–æ–∫–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–ª–∏ API)
  ollama,
  
  /// –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
  local,
}

/// –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–æ-—á–∏—Ç–∞–µ–º—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
extension ModelSourceExtension on ModelSource {
  String get displayName {
    switch (this) {
      case ModelSource.huggingFace:
        return 'HuggingFace';
      case ModelSource.ollama:
        return 'Ollama';
      case ModelSource.local:
        return '–õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª';
    }
  }
  
  String get description {
    switch (this) {
      case ModelSource.huggingFace:
        return '–°–∫–∞—á–∞—Ç—å —Å HuggingFace Hub';
      case ModelSource.ollama:
        return '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Ollama (–ª–æ–∫–∞–ª—å–Ω–æ)';
      case ModelSource.local:
        return '–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ';
    }
  }
  
  String get icon {
    switch (this) {
      case ModelSource.huggingFace:
        return 'ü§ó';
      case ModelSource.ollama:
        return 'ü¶ô';
      case ModelSource.local:
        return 'üìÅ';
    }
  }
}

/// –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –º–æ–¥–µ–ª–∏
class ModelNotFoundException implements Exception {
  final String modelId;
  final String? message;
  
  ModelNotFoundException(this.modelId, [this.message]);
  
  @override
  String toString() {
    return 'ModelNotFoundException: –ú–æ–¥–µ–ª—å "$modelId" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. ${message ?? ""}';
  }
}

/// –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏
class ModelDownloadException implements Exception {
  final String modelId;
  final String message;
  final dynamic originalError;
  
  ModelDownloadException(this.modelId, this.message, [this.originalError]);
  
  @override
  String toString() {
    return 'ModelDownloadException: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ "$modelId": $message';
  }
}

/// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –∑–∞–≥—Ä—É–∑–∫–∏
class DownloadProgress {
  final double progress; // 0.0 - 1.0
  final String status;
  final int? downloadedBytes;
  final int? totalBytes;
  
  const DownloadProgress({
    required this.progress,
    required this.status,
    this.downloadedBytes,
    this.totalBytes,
  });
  
  String get progressPercent => '${(progress * 100).toStringAsFixed(1)}%';
  
  String get downloadedMB => downloadedBytes != null 
      ? '${(downloadedBytes! / 1024 / 1024).toStringAsFixed(1)} MB'
      : 'N/A';
  
  String get totalMB => totalBytes != null
      ? '${(totalBytes! / 1024 / 1024).toStringAsFixed(1)} MB'
      : 'N/A';
  
  @override
  String toString() {
    if (downloadedBytes != null && totalBytes != null) {
      return '$status: $downloadedMB / $totalMB ($progressPercent)';
    }
    return '$status: $progressPercent';
  }
}

/// Callback –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏
typedef DownloadProgressCallback = void Function(DownloadProgress progress);


