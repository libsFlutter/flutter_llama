#!/bin/bash

# Flutter Llama Test Runner
# –£–¥–æ–±–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤

set -e

echo "üß™ Flutter Llama Test Runner"
echo "=============================="
echo ""

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Check if flutter is installed
if ! command -v flutter &> /dev/null; then
    echo -e "${RED}‚ùå Flutter –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Flutter —Å–Ω–∞—á–∞–ª–∞.${NC}"
    exit 1
fi

# Function to print section header
print_header() {
    echo -e "${BLUE}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo -e "${BLUE}  $1${NC}"
    echo -e "${BLUE}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo ""
}

# Parse arguments
RUN_UNIT=false
RUN_INTEGRATION=false
RUN_COVERAGE=false
INSTALL_DEPS=false

if [ $# -eq 0 ]; then
    RUN_UNIT=true
else
    while [[ $# -gt 0 ]]; do
        case $1 in
            --unit|-u)
                RUN_UNIT=true
                shift
                ;;
            --integration|-i)
                RUN_INTEGRATION=true
                shift
                ;;
            --coverage|-c)
                RUN_COVERAGE=true
                RUN_UNIT=true
                shift
                ;;
            --install|-d)
                INSTALL_DEPS=true
                shift
                ;;
            --all|-a)
                RUN_UNIT=true
                RUN_INTEGRATION=true
                shift
                ;;
            --help|-h)
                echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./run_tests.sh [–æ–ø—Ü–∏–∏]"
                echo ""
                echo "–û–ø—Ü–∏–∏:"
                echo "  --unit, -u          –ó–∞–ø—É—Å—Ç–∏—Ç—å unit —Ç–µ—Å—Ç—ã"
                echo "  --integration, -i   –ó–∞–ø—É—Å—Ç–∏—Ç—å integration —Ç–µ—Å—Ç—ã"
                echo "  --coverage, -c      –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å coverage"
                echo "  --install, -d       –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
                echo "  --all, -a           –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã"
                echo "  --help, -h          –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
                echo ""
                echo "–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é (–±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤): –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è unit —Ç–µ—Å—Ç—ã"
                exit 0
                ;;
            *)
                echo -e "${RED}–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1${NC}"
                echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
                exit 1
                ;;
        esac
    done
fi

# Install dependencies
if [ "$INSTALL_DEPS" = true ]; then
    print_header "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    flutter pub get
    cd example && flutter pub get && cd ..
    echo -e "${GREEN}‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
    echo ""
fi

# Run unit tests
if [ "$RUN_UNIT" = true ]; then
    print_header "üß™ –ó–∞–ø—É—Å–∫ Unit —Ç–µ—Å—Ç–æ–≤"
    
    if [ "$RUN_COVERAGE" = true ]; then
        echo -e "${YELLOW}–ó–∞–ø—É—Å–∫ —Å coverage...${NC}"
        flutter test --coverage
        echo ""
        echo -e "${GREEN}‚úÖ Unit —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —Å coverage${NC}"
        echo -e "${BLUE}üìä Coverage report: coverage/lcov.info${NC}"
        
        # Generate HTML report if genhtml is available
        if command -v genhtml &> /dev/null; then
            echo -e "${YELLOW}–ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –æ—Ç—á–µ—Ç–∞...${NC}"
            genhtml coverage/lcov.info -o coverage/html
            echo -e "${GREEN}‚úÖ HTML –æ—Ç—á–µ—Ç: coverage/html/index.html${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è  genhtml –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ lcov –¥–ª—è HTML –æ—Ç—á–µ—Ç–∞${NC}"
        fi
    else
        flutter test --reporter expanded
        echo -e "${GREEN}‚úÖ Unit —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã${NC}"
    fi
    echo ""
fi

# Run integration tests
if [ "$RUN_INTEGRATION" = true ]; then
    print_header "üîó –ó–∞–ø—É—Å–∫ Integration —Ç–µ—Å—Ç–æ–≤"
    
    # Check if Ollama is installed
    if ! command -v ollama &> /dev/null; then
        echo -e "${YELLOW}‚ö†Ô∏è  Ollama –Ω–µ –Ω–∞–π–¥–µ–Ω.${NC}"
        echo -e "${YELLOW}   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Ollama –¥–ª—è —Ç–µ—Å—Ç–æ–≤ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π –º–æ–¥–µ–ª–µ–π:${NC}"
        echo -e "${YELLOW}   brew install ollama${NC}"
        echo ""
    else
        echo -e "${GREEN}‚úÖ Ollama –Ω–∞–π–¥–µ–Ω${NC}"
        
        # Check if model is available
        if ollama list | grep -q "braindler"; then
            echo -e "${GREEN}‚úÖ –ú–æ–¥–µ–ª—å Braindler –Ω–∞–π–¥–µ–Ω–∞${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è  –ú–æ–¥–µ–ª—å Braindler –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
            echo -e "${YELLOW}   –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ q2_k (72MB)...${NC}"
            ollama pull nativemind/braindler:q2_k
        fi
    fi
    
    echo ""
    echo -e "${BLUE}–ó–∞–ø—É—Å–∫ integration —Ç–µ—Å—Ç–æ–≤...${NC}"
    cd example
    
    # Check if device is connected
    DEVICES=$(flutter devices --machine | grep -c '"id"')
    if [ "$DEVICES" -eq 0 ]; then
        echo -e "${RED}‚ùå –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —ç–º—É–ª—è—Ç–æ—Ä.${NC}"
        cd ..
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ –ù–∞–π–¥–µ–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: $DEVICES${NC}"
    echo ""
    
    # Run basic integration tests
    echo -e "${BLUE}–ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤—ã—Ö integration —Ç–µ—Å—Ç–æ–≤...${NC}"
    flutter test integration_test/plugin_integration_test.dart
    
    # Run Ollama integration tests if available
    if command -v ollama &> /dev/null && ollama list | grep -q "braindler"; then
        echo ""
        echo -e "${BLUE}–ó–∞–ø—É—Å–∫ Ollama integration —Ç–µ—Å—Ç–æ–≤...${NC}"
        flutter test integration_test/ollama_integration_test.dart
    fi
    
    cd ..
    echo -e "${GREEN}‚úÖ Integration —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã${NC}"
    echo ""
fi

# Summary
print_header "üìä –ò—Ç–æ–≥–∏"
if [ "$RUN_UNIT" = true ]; then
    echo -e "${GREEN}‚úÖ Unit —Ç–µ—Å—Ç—ã: PASSED${NC}"
fi
if [ "$RUN_INTEGRATION" = true ]; then
    echo -e "${GREEN}‚úÖ Integration —Ç–µ—Å—Ç—ã: PASSED${NC}"
fi
if [ "$RUN_COVERAGE" = true ]; then
    echo -e "${GREEN}‚úÖ Coverage: –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω${NC}"
fi
echo ""
echo -e "${BLUE}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!${NC}"
