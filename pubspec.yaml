name: flutter_llama
description: "Flutter plugin for running LLM inference with llama.cpp and GGUF models on Android and iOS"
version: 1.0.2
homepage: https://github.com/nativemind/flutter_llama
repository: https://github.com/nativemind/flutter_llama
issue_tracker: https://github.com/nativemind/flutter_llama/issues

# License
# This package is licensed under NativeMindNONC (Non-Commercial) License
# Commercial use requires a separate license - contact: licensing@nativemind.net

environment:
  sdk: ^3.0.0
  flutter: '>=3.3.0'

dependencies:
  flutter:
    sdk: flutter
  plugin_platform_interface: ^2.0.2

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_lints: ^5.0.0
  
  # Testing dependencies
  integration_test:
    sdk: flutter
  mockito: ^5.4.4
  build_runner: ^2.4.8
  
  # Required for test helpers
  http: ^1.2.0
  path_provider: ^2.1.2
  path: ^1.9.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # This section identifies this Flutter project as a plugin project.
  # The 'pluginClass' specifies the class (in Java, Kotlin, Swift, Objective-C, etc.)
  # which should be registered in the plugin registry. This is required for
  # using method channels.
  # The Android 'package' specifies package in which the registered class is.
  # This is required for using method channels on Android.
  # The 'ffiPlugin' specifies that native code should be built and bundled.
  # This is required for using `dart:ffi`.
  # All these are used by the tooling to maintain consistency when
  # adding or updating assets for this project.
  plugin:
    platforms:
      android:
        package: net.nativemind.flutter_llama
        pluginClass: FlutterLlamaPlugin
      ios:
        pluginClass: FlutterLlamaPlugin
      macos:
        pluginClass: FlutterLlamaPlugin

  # Assets for multimodal models (commented out - will be downloaded via Hugging Face)
  # assets:
  #   - assets/models/

  # To add custom fonts to your plugin package, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts in packages, see
  # https://flutter.dev/to/font-from-package
